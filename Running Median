#include<bits/stdc++.h>
int comp(int maxi,int mini)
{
    if(maxi==mini) return 0;
    else if(maxi>mini) return 1;
    else return -1;
}
void calcmedian(int element,int &median,priority_queue<int> &maxi,priority_queue<int,vector<int>,greater<int>> &mini)
    {
  switch(comp(maxi.size(),mini.size()))
  {
      case 0:
          if(element>median)
          {
              mini.push(element);
              median=mini.top();
          }
          else
          {
              maxi.push(element);
              median=maxi.top();
          }
          break;
          
      case 1:
           if(element>median)
              {
                  mini.push(element);
              }
              else
              {
                  mini.push(maxi.top());
                  maxi.pop();
                  maxi.push(element);
              }
              median = (mini.top()+ maxi.top())/2;
              break;
        case -1:
          
              if(element>median)
              {
                  maxi.push(mini.top());
                  mini.pop();
                  mini.push(element);
              }
              else
              {
                  maxi.push(element);
              }
              median = (mini.top()+ maxi.top())/2;
            break;
          
   }
}
void findMedian(int *arr, int n)
{
    //vector<int>ans;
    priority_queue<int>maxi;
    priority_queue<int,vector<int>,greater<int>>mini;
    
    int median =0;
    for(int i =0;i<n;i++)
    {
        calcmedian(arr[i],median,maxi,mini);
        cout<<median<<" ";
    }
    return;
    // Write your code here
}
